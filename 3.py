# 3.3[20]: В настольной игре Скрабл (Scrabble) каждая буква 
# имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного
# пользователем слова. Будем считать, что на вход подается 
# только одно слово, которое содержит либо только английские,
# либо только русские буквы и заранее известно какой алфавит 
# надо использовать.

# Примеры/Тесты:
# Input:   ноутбук
# Output:  12

# Input:   notebook
# Output:  14
# (*) Примечание.
# Подумайте о том какие структуры данных здесь наиболее
# удобно использовать, чтобы просто проверять в какую группу
# попадает буква, а также просто накапливать сумму очков.



def falphabet_0(word):
    for key in russian_alphabet:
        if word in key:
            return russian_alphabet.get(key)
        
russian_alphabet = {'АВЕИНОРСТ':1, 'ДКЛМПУ':2, 'БГЁЬЯ':3,
                    'ЙЫ':4, 'ЖЗХЦЧ':5, 'ШЭЮ':8, 'ФЩЪ':10}

def falphabet_1(word):
    for key in english_alphabet:
        if word in key:
            return english_alphabet.get(key)
        
english_alphabet = {'AEIOULNSTR':1, 'DG':2, 'BCMP':3,
                    'FHVWY':4, 'K':5, 'JX':8, 'QZ':10}

print('Какой алфавит будете использовать?')
what_alphabet = input('Русский введите 0, английский введите 1: ')
if what_alphabet == 0:
    print(sum(map(falphabet_0, input('Теперь введите слово на языке который выбрали: '))))
else:
    print(sum(map(falphabet_1, input('Теперь введите слово на языке который выбрали: '))))
